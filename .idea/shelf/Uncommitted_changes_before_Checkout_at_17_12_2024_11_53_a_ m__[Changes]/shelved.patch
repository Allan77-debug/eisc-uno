Index: src/main/java/org/example/eiscuno/view/WelcomeStage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.eiscuno.view;\r\n\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.stage.Screen;\r\nimport javafx.stage.Stage;\r\nimport javafx.stage.StageStyle;\r\n\r\nimport java.io.IOException;\r\nimport java.util.Objects;\r\n\r\npublic class WelcomeStage extends Stage {\r\n\r\n    /**\r\n     * Constructs a new WelcomeStage instance.\r\n     * <p>This constructor initializes the stage with a predefined FXML layout,\r\n     * applies a CSS stylesheet for styling, and configures the stage to be non-resizable\r\n     * and undecorated. The stage's dimensions are set to match the primary screen size.</p>\r\n     *\r\n     * @throws IOException if there is an issue loading the FXML resource or stylesheet.\r\n     */\r\n    public WelcomeStage() throws IOException {\r\n        FXMLLoader loader = new FXMLLoader(getClass().getResource(\"/org/example/eiscuno/WelcomeView.fxml\"));\r\n        Parent root;\r\n        try {\r\n            root = loader.load();\r\n        } catch (IOException e) {\r\n            // Re-throwing the caught IOException\r\n            throw new IOException(\"Error while loading FXML file\", e);\r\n        }\r\n        Scene scene = new Scene(root);\r\n        scene.getStylesheets().add(Objects.requireNonNull(getClass().getResource(\"/org/example/eiscuno/styles.css\")).toExternalForm());\r\n        setResizable(false);\r\n        setTitle(\"EISC UNO\");\r\n        initStyle(StageStyle.UNDECORATED);\r\n        double screenWidth = Screen.getPrimary().getBounds().getWidth();\r\n        double screenHeight = Screen.getPrimary().getBounds().getHeight();\r\n        setWidth(850);\r\n        setHeight(600);\r\n        setScene(scene);\r\n        show();\r\n    }\r\n    /**\r\n     * Holds the singleton instance of the {@code WelcomeStage}.\r\n     * This is a private static class to ensure lazy initialization and thread safety.\r\n     */\r\n    private static class WelcomeStageHolder {\r\n        private static WelcomeStage INSTANCE;\r\n    }\r\n    /**\r\n     * Retrieves the singleton instance of the WelcomeStage.\r\n     * <p>If no instance exists, it initializes a new one. Otherwise, it returns the existing instance.</p>\r\n     *\r\n     * @return the singleton instance of {@code WelcomeStage}.\r\n     * @throws IOException if there is an issue creating a new instance.\r\n     */\r\n\r\n    public static void deleteInstance() {\r\n        WelcomeStage.WelcomeStageHolder.INSTANCE.close();\r\n        WelcomeStage.WelcomeStageHolder.INSTANCE = null;\r\n    }\r\n    public static WelcomeStage getInstance() throws IOException {\r\n        return WelcomeStage.WelcomeStageHolder.INSTANCE != null ?\r\n                WelcomeStage.WelcomeStageHolder.INSTANCE :\r\n                (WelcomeStage.WelcomeStageHolder.INSTANCE = new WelcomeStage());\r\n\r\n    }\r\n\r\n    /**\r\n     * Holder class for the singleton instance of GameUnoStage.\r\n     * This class ensures lazy initialization of the singleton instance.\r\n     */\r\n\r\n\r\n}\r\n\r\n\r\n\r\n
===================================================================
diff --git a/src/main/java/org/example/eiscuno/view/WelcomeStage.java b/src/main/java/org/example/eiscuno/view/WelcomeStage.java
--- a/src/main/java/org/example/eiscuno/view/WelcomeStage.java	(revision 28d3245de84b1bcceb43e4812c5a3ebb3a4984f1)
+++ b/src/main/java/org/example/eiscuno/view/WelcomeStage.java	(date 1734453978073)
@@ -34,8 +34,6 @@
         setResizable(false);
         setTitle("EISC UNO");
         initStyle(StageStyle.UNDECORATED);
-        double screenWidth = Screen.getPrimary().getBounds().getWidth();
-        double screenHeight = Screen.getPrimary().getBounds().getHeight();
         setWidth(850);
         setHeight(600);
         setScene(scene);
